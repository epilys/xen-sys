/* automatically generated by rust-bindgen 0.64.0 */

pub const XC_PAGE_SHIFT: u32 = 12;
pub const XC_PAGE_SIZE: u32 = 4096;
pub const XC_PAGE_MASK: i32 = -4096;
pub const INVALID_MFN: i32 = -1;
pub const XENCTRL_HAS_XC_INTERFACE: u32 = 1;
pub const XC_CORE_MAGIC: u32 = 4027575277;
pub const XC_CORE_MAGIC_HVM: u32 = 4027575278;
pub const XC_CPUPOOL_POOLID_ANY: u32 = 4294967295;
pub const E820_RAM: u32 = 1;
pub const E820_RESERVED: u32 = 2;
pub const E820_ACPI: u32 = 3;
pub const E820_NVS: u32 = 4;
pub const E820_UNUSABLE: u32 = 5;
pub const E820MAX: u32 = 128;
pub const XC_MAX_ERROR_MSG_LEN: u32 = 1024;
pub const XBT_NULL: u32 = 0;
pub const XS_OPEN_READONLY: u32 = 1;
pub const XS_OPEN_SOCKETONLY: u32 = 2;
pub const XS_UNWATCH_FILTER: u32 = 4;
pub type va_list = __builtin_va_list;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct cpu_user_regs {
    pub __bindgen_anon_1: cpu_user_regs__bindgen_ty_1,
    pub __bindgen_anon_2: cpu_user_regs__bindgen_ty_2,
    pub __bindgen_anon_3: cpu_user_regs__bindgen_ty_3,
    pub __bindgen_anon_4: cpu_user_regs__bindgen_ty_4,
    pub __bindgen_anon_5: cpu_user_regs__bindgen_ty_5,
    pub __bindgen_anon_6: cpu_user_regs__bindgen_ty_6,
    pub __bindgen_anon_7: cpu_user_regs__bindgen_ty_7,
    pub __bindgen_anon_8: cpu_user_regs__bindgen_ty_8,
    pub __bindgen_anon_9: cpu_user_regs__bindgen_ty_9,
    pub __bindgen_anon_10: cpu_user_regs__bindgen_ty_10,
    pub __bindgen_anon_11: cpu_user_regs__bindgen_ty_11,
    pub __bindgen_anon_12: cpu_user_regs__bindgen_ty_12,
    pub __bindgen_anon_13: cpu_user_regs__bindgen_ty_13,
    pub __bindgen_anon_14: cpu_user_regs__bindgen_ty_14,
    pub __bindgen_anon_15: cpu_user_regs__bindgen_ty_15,
    pub error_code: u32,
    pub entry_vector: u32,
    pub __bindgen_anon_16: cpu_user_regs__bindgen_ty_16,
    pub cs: u16,
    pub _pad0: [u16; 1usize],
    pub saved_upcall_mask: u8,
    pub _pad1: [u8; 3usize],
    pub __bindgen_anon_17: cpu_user_regs__bindgen_ty_17,
    pub __bindgen_anon_18: cpu_user_regs__bindgen_ty_18,
    pub ss: u16,
    pub _pad2: [u16; 3usize],
    pub es: u16,
    pub _pad3: [u16; 3usize],
    pub ds: u16,
    pub _pad4: [u16; 3usize],
    pub fs: u16,
    pub _pad5: [u16; 3usize],
    pub gs: u16,
    pub _pad6: [u16; 3usize],
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union cpu_user_regs__bindgen_ty_1 {
    pub r15: u64,
    pub r15d: u32,
    pub r15w: u16,
    pub r15b: u8,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union cpu_user_regs__bindgen_ty_2 {
    pub r14: u64,
    pub r14d: u32,
    pub r14w: u16,
    pub r14b: u8,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union cpu_user_regs__bindgen_ty_3 {
    pub r13: u64,
    pub r13d: u32,
    pub r13w: u16,
    pub r13b: u8,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union cpu_user_regs__bindgen_ty_4 {
    pub r12: u64,
    pub r12d: u32,
    pub r12w: u16,
    pub r12b: u8,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union cpu_user_regs__bindgen_ty_5 {
    pub rbp: u64,
    pub ebp: u32,
    pub bp: u16,
    pub bpl: u8,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union cpu_user_regs__bindgen_ty_6 {
    pub rbx: u64,
    pub ebx: u32,
    pub bx: u16,
    pub __bindgen_anon_1: cpu_user_regs__bindgen_ty_6__bindgen_ty_1,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cpu_user_regs__bindgen_ty_6__bindgen_ty_1 {
    pub bl: u8,
    pub bh: u8,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union cpu_user_regs__bindgen_ty_7 {
    pub r11: u64,
    pub r11d: u32,
    pub r11w: u16,
    pub r11b: u8,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union cpu_user_regs__bindgen_ty_8 {
    pub r10: u64,
    pub r10d: u32,
    pub r10w: u16,
    pub r10b: u8,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union cpu_user_regs__bindgen_ty_9 {
    pub r9: u64,
    pub r9d: u32,
    pub r9w: u16,
    pub r9b: u8,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union cpu_user_regs__bindgen_ty_10 {
    pub r8: u64,
    pub r8d: u32,
    pub r8w: u16,
    pub r8b: u8,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union cpu_user_regs__bindgen_ty_11 {
    pub rax: u64,
    pub eax: u32,
    pub ax: u16,
    pub __bindgen_anon_1: cpu_user_regs__bindgen_ty_11__bindgen_ty_1,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cpu_user_regs__bindgen_ty_11__bindgen_ty_1 {
    pub al: u8,
    pub ah: u8,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union cpu_user_regs__bindgen_ty_12 {
    pub rcx: u64,
    pub ecx: u32,
    pub cx: u16,
    pub __bindgen_anon_1: cpu_user_regs__bindgen_ty_12__bindgen_ty_1,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cpu_user_regs__bindgen_ty_12__bindgen_ty_1 {
    pub cl: u8,
    pub ch: u8,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union cpu_user_regs__bindgen_ty_13 {
    pub rdx: u64,
    pub edx: u32,
    pub dx: u16,
    pub __bindgen_anon_1: cpu_user_regs__bindgen_ty_13__bindgen_ty_1,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cpu_user_regs__bindgen_ty_13__bindgen_ty_1 {
    pub dl: u8,
    pub dh: u8,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union cpu_user_regs__bindgen_ty_14 {
    pub rsi: u64,
    pub esi: u32,
    pub si: u16,
    pub sil: u8,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union cpu_user_regs__bindgen_ty_15 {
    pub rdi: u64,
    pub edi: u32,
    pub di: u16,
    pub dil: u8,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union cpu_user_regs__bindgen_ty_16 {
    pub rip: u64,
    pub eip: u32,
    pub ip: u16,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union cpu_user_regs__bindgen_ty_17 {
    pub rflags: u64,
    pub eflags: u32,
    pub flags: u16,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union cpu_user_regs__bindgen_ty_18 {
    pub rsp: u64,
    pub esp: u32,
    pub sp: u16,
    pub spl: u8,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct arch_vcpu_info {
    pub cr2: xen_bindings_x86_64_types::c_ulong,
    pub pad: xen_bindings_x86_64_types::c_ulong,
}
pub type xen_pfn_t = xen_bindings_x86_64_types::c_ulong;
pub type xen_ulong_t = xen_bindings_x86_64_types::c_ulong;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct trap_info {
    pub vector: u8,
    pub flags: u8,
    pub cs: u16,
    pub address: xen_bindings_x86_64_types::c_ulong,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct vcpu_guest_context {
    pub fpu_ctxt: vcpu_guest_context__bindgen_ty_1,
    pub flags: xen_bindings_x86_64_types::c_ulong,
    pub user_regs: cpu_user_regs,
    pub trap_ctxt: [trap_info; 256usize],
    pub ldt_base: xen_bindings_x86_64_types::c_ulong,
    pub ldt_ents: xen_bindings_x86_64_types::c_ulong,
    pub gdt_frames: [xen_bindings_x86_64_types::c_ulong; 16usize],
    pub gdt_ents: xen_bindings_x86_64_types::c_ulong,
    pub kernel_ss: xen_bindings_x86_64_types::c_ulong,
    pub kernel_sp: xen_bindings_x86_64_types::c_ulong,
    pub ctrlreg: [xen_bindings_x86_64_types::c_ulong; 8usize],
    pub debugreg: [xen_bindings_x86_64_types::c_ulong; 8usize],
    pub event_callback_eip: xen_bindings_x86_64_types::c_ulong,
    pub failsafe_callback_eip: xen_bindings_x86_64_types::c_ulong,
    pub syscall_callback_eip: xen_bindings_x86_64_types::c_ulong,
    pub vm_assist: xen_bindings_x86_64_types::c_ulong,
    pub fs_base: u64,
    pub gs_base_kernel: u64,
    pub gs_base_user: u64,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct vcpu_guest_context__bindgen_ty_1 {
    pub x: [xen_bindings_x86_64_types::c_char; 512usize],
}
pub type vcpu_guest_context_t = vcpu_guest_context;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __guest_handle_vcpu_guest_context_t {
    pub p: *mut vcpu_guest_context_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct arch_shared_info {
    pub max_pfn: xen_bindings_x86_64_types::c_ulong,
    pub pfn_to_mfn_frame_list_list: xen_pfn_t,
    pub nmi_reason: xen_bindings_x86_64_types::c_ulong,
    pub p2m_cr3: xen_bindings_x86_64_types::c_ulong,
    pub p2m_vaddr: xen_bindings_x86_64_types::c_ulong,
    pub p2m_generation: xen_bindings_x86_64_types::c_ulong,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_arch_domainconfig {
    pub emulation_flags: u32,
    pub misc_flags: u32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_cpuid_leaf {
    pub leaf: u32,
    pub subleaf: u32,
    pub a: u32,
    pub b: u32,
    pub c: u32,
    pub d: u32,
}
pub type xen_cpuid_leaf_t = xen_cpuid_leaf;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __guest_handle_xen_cpuid_leaf_t {
    pub p: *mut xen_cpuid_leaf_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_msr_entry {
    pub idx: u32,
    pub flags: u32,
    pub val: u64,
}
pub type xen_msr_entry_t = xen_msr_entry;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __guest_handle_xen_msr_entry_t {
    pub p: *mut xen_msr_entry_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __guest_handle_char {
    pub p: *mut xen_bindings_x86_64_types::c_char,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __guest_handle_const_char {
    pub p: *const xen_bindings_x86_64_types::c_char,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __guest_handle_uint {
    pub p: *mut xen_bindings_x86_64_types::c_uint,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __guest_handle_const_void {
    pub p: *const xen_bindings_x86_64_types::c_void,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __guest_handle_xen_pfn_t {
    pub p: *mut xen_pfn_t,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct mmuext_op {
    pub cmd: xen_bindings_x86_64_types::c_uint,
    pub arg1: mmuext_op__bindgen_ty_1,
    pub arg2: mmuext_op__bindgen_ty_2,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union mmuext_op__bindgen_ty_1 {
    pub mfn: xen_pfn_t,
    pub linear_addr: xen_bindings_x86_64_types::c_ulong,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union mmuext_op__bindgen_ty_2 {
    pub nr_ents: xen_bindings_x86_64_types::c_uint,
    pub vcpumask: __guest_handle_const_void,
    pub src_mfn: xen_pfn_t,
}
pub type domid_t = u16;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct vcpu_time_info {
    pub version: u32,
    pub pad0: u32,
    pub tsc_timestamp: u64,
    pub system_time: u64,
    pub tsc_to_system_mul: u32,
    pub tsc_shift: i8,
    pub flags: u8,
    pub pad1: [u8; 2usize],
}
pub type vcpu_time_info_t = vcpu_time_info;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct vcpu_info {
    pub evtchn_upcall_pending: u8,
    pub evtchn_upcall_mask: u8,
    pub evtchn_pending_sel: xen_ulong_t,
    pub arch: arch_vcpu_info,
    pub time: vcpu_time_info_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct shared_info {
    pub vcpu_info: [vcpu_info; 32usize],
    pub evtchn_pending: [xen_ulong_t; 64usize],
    pub evtchn_mask: [xen_ulong_t; 64usize],
    pub wc_version: u32,
    pub wc_sec: u32,
    pub wc_nsec: u32,
    pub wc_sec_hi: u32,
    pub arch: arch_shared_info,
}
pub type shared_info_t = shared_info;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct start_info {
    pub magic: [xen_bindings_x86_64_types::c_char; 32usize],
    pub nr_pages: xen_bindings_x86_64_types::c_ulong,
    pub shared_info: xen_bindings_x86_64_types::c_ulong,
    pub flags: u32,
    pub store_mfn: xen_pfn_t,
    pub store_evtchn: u32,
    pub console: start_info__bindgen_ty_1,
    pub pt_base: xen_bindings_x86_64_types::c_ulong,
    pub nr_pt_frames: xen_bindings_x86_64_types::c_ulong,
    pub mfn_list: xen_bindings_x86_64_types::c_ulong,
    pub mod_start: xen_bindings_x86_64_types::c_ulong,
    pub mod_len: xen_bindings_x86_64_types::c_ulong,
    pub cmd_line: [i8; 1024usize],
    pub first_p2m_pfn: xen_bindings_x86_64_types::c_ulong,
    pub nr_p2m_frames: xen_bindings_x86_64_types::c_ulong,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union start_info__bindgen_ty_1 {
    pub domU: start_info__bindgen_ty_1__bindgen_ty_1,
    pub dom0: start_info__bindgen_ty_1__bindgen_ty_2,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct start_info__bindgen_ty_1__bindgen_ty_1 {
    pub mfn: xen_pfn_t,
    pub evtchn: u32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct start_info__bindgen_ty_1__bindgen_ty_2 {
    pub info_off: u32,
    pub info_size: u32,
}
pub type start_info_t = start_info;
pub type xen_domain_handle_t = [u8; 16usize];
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __guest_handle_uint8 {
    pub p: *mut u8,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __guest_handle_uint32 {
    pub p: *mut u32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __guest_handle_uint64 {
    pub p: *mut u64,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xenctl_bitmap {
    pub bitmap: __guest_handle_uint8,
    pub nr_bits: u32,
}
pub type xenctl_bitmap_t = xenctl_bitmap;
pub type evtchn_port_t = u32;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct evtchn_status {
    pub dom: domid_t,
    pub port: evtchn_port_t,
    pub status: u32,
    pub vcpu: u32,
    pub u: evtchn_status__bindgen_ty_1,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union evtchn_status__bindgen_ty_1 {
    pub unbound: evtchn_status__bindgen_ty_1__bindgen_ty_1,
    pub interdomain: evtchn_status__bindgen_ty_1__bindgen_ty_2,
    pub pirq: u32,
    pub virq: u32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct evtchn_status__bindgen_ty_1__bindgen_ty_1 {
    pub dom: domid_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct evtchn_status__bindgen_ty_1__bindgen_ty_2 {
    pub dom: domid_t,
    pub port: evtchn_port_t,
}
pub type grant_ref_t = u32;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct grant_entry_v1 {
    pub flags: u16,
    pub domid: domid_t,
    pub frame: u32,
}
pub type grant_entry_v1_t = grant_entry_v1;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct grant_entry_header {
    pub flags: u16,
    pub domid: domid_t,
}
pub type grant_entry_header_t = grant_entry_header;
#[repr(C)]
#[derive(Copy, Clone)]
pub union grant_entry_v2 {
    pub hdr: grant_entry_header_t,
    pub full_page: grant_entry_v2__bindgen_ty_1,
    pub sub_page: grant_entry_v2__bindgen_ty_2,
    pub transitive: grant_entry_v2__bindgen_ty_3,
    pub __spacer: [u32; 4usize],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct grant_entry_v2__bindgen_ty_1 {
    pub hdr: grant_entry_header_t,
    pub pad0: u32,
    pub frame: u64,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct grant_entry_v2__bindgen_ty_2 {
    pub hdr: grant_entry_header_t,
    pub page_off: u16,
    pub length: u16,
    pub frame: u64,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct grant_entry_v2__bindgen_ty_3 {
    pub hdr: grant_entry_header_t,
    pub trans_domid: domid_t,
    pub pad0: u16,
    pub gref: grant_ref_t,
}
pub type grant_entry_v2_t = grant_entry_v2;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gnttab_query_size {
    pub dom: domid_t,
    pub nr_frames: u32,
    pub max_nr_frames: u32,
    pub status: i16,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct hvm_vmce_vcpu {
    pub caps: u64,
    pub mci_ctl2_bank0: u64,
    pub mci_ctl2_bank1: u64,
    pub mcg_ext_ctl: u64,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct physdev_pci_device {
    pub seg: u16,
    pub bus: u8,
    pub devfn: u8,
}
pub type physdev_pci_device_t = physdev_pci_device;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __guest_handle_physdev_pci_device_t {
    pub p: *mut physdev_pci_device_t,
}
pub const xenmem_access_t_XENMEM_access_n: xenmem_access_t = 0;
pub const xenmem_access_t_XENMEM_access_r: xenmem_access_t = 1;
pub const xenmem_access_t_XENMEM_access_w: xenmem_access_t = 2;
pub const xenmem_access_t_XENMEM_access_rw: xenmem_access_t = 3;
pub const xenmem_access_t_XENMEM_access_x: xenmem_access_t = 4;
pub const xenmem_access_t_XENMEM_access_rx: xenmem_access_t = 5;
pub const xenmem_access_t_XENMEM_access_wx: xenmem_access_t = 6;
pub const xenmem_access_t_XENMEM_access_rwx: xenmem_access_t = 7;
pub const xenmem_access_t_XENMEM_access_rx2rw: xenmem_access_t = 8;
pub const xenmem_access_t_XENMEM_access_n2rwx: xenmem_access_t = 9;
pub const xenmem_access_t_XENMEM_access_default: xenmem_access_t = 10;
pub type xenmem_access_t = xen_bindings_x86_64_types::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_reserved_device_memory {
    pub start_pfn: xen_pfn_t,
    pub nr_pages: xen_ulong_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_vmemrange {
    pub start: u64,
    pub end: u64,
    pub flags: xen_bindings_x86_64_types::c_uint,
    pub nid: xen_bindings_x86_64_types::c_uint,
}
pub type xen_vmemrange_t = xen_vmemrange;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __guest_handle_xen_vmemrange_t {
    pub p: *mut xen_vmemrange_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_createdomain {
    pub ssidref: u32,
    pub handle: xen_domain_handle_t,
    pub flags: u32,
    pub iommu_opts: u32,
    pub max_vcpus: u32,
    pub max_evtchn_port: u32,
    pub max_grant_frames: i32,
    pub max_maptrack_frames: i32,
    pub grant_opts: u32,
    pub vmtrace_size: u32,
    pub cpupool_id: u32,
    pub arch: xen_arch_domainconfig,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_getdomaininfo {
    pub domain: domid_t,
    pub pad1: u16,
    pub flags: u32,
    pub tot_pages: u64,
    pub max_pages: u64,
    pub outstanding_pages: u64,
    pub shr_pages: u64,
    pub paged_pages: u64,
    pub shared_info_frame: u64,
    pub cpu_time: u64,
    pub nr_online_vcpus: u32,
    pub max_vcpu_id: u32,
    pub ssidref: u32,
    pub handle: xen_domain_handle_t,
    pub cpupool: u32,
    pub gpaddr_bits: u8,
    pub pad2: [u8; 7usize],
    pub arch_config: xen_arch_domainconfig,
}
pub type xen_domctl_getdomaininfo_t = xen_domctl_getdomaininfo;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __guest_handle_xen_domctl_getdomaininfo_t {
    pub p: *mut xen_domctl_getdomaininfo_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_getpageframeinfo3 {
    pub num: u64,
    pub array: __guest_handle_xen_pfn_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_shadow_op_stats {
    pub fault_count: u32,
    pub dirty_count: u32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_shadow_op {
    pub op: u32,
    pub mode: u32,
    pub mb: u32,
    pub dirty_bitmap: __guest_handle_uint8,
    pub pages: u64,
    pub stats: xen_domctl_shadow_op_stats,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_max_mem {
    pub max_memkb: u64,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_vcpucontext {
    pub vcpu: u32,
    pub ctxt: __guest_handle_vcpu_guest_context_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_getvcpuinfo {
    pub vcpu: u32,
    pub online: u8,
    pub blocked: u8,
    pub running: u8,
    pub cpu_time: u64,
    pub cpu: u32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_nodeaffinity {
    pub nodemap: xenctl_bitmap,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_vcpuaffinity {
    pub vcpu: u32,
    pub flags: u32,
    pub cpumap_hard: xenctl_bitmap,
    pub cpumap_soft: xenctl_bitmap,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_max_vcpus {
    pub max: u32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_sched_credit {
    pub weight: u16,
    pub cap: u16,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_sched_credit2 {
    pub weight: u16,
    pub cap: u16,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_sched_rtds {
    pub period: u32,
    pub budget: u32,
    pub flags: u32,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct xen_domctl_schedparam_vcpu {
    pub u: xen_domctl_schedparam_vcpu__bindgen_ty_1,
    pub vcpuid: u32,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union xen_domctl_schedparam_vcpu__bindgen_ty_1 {
    pub credit: xen_domctl_sched_credit,
    pub credit2: xen_domctl_sched_credit2,
    pub rtds: xen_domctl_sched_rtds,
}
pub type xen_domctl_schedparam_vcpu_t = xen_domctl_schedparam_vcpu;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __guest_handle_xen_domctl_schedparam_vcpu_t {
    pub p: *mut xen_domctl_schedparam_vcpu_t,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct xen_domctl_scheduler_op {
    pub sched_id: u32,
    pub cmd: u32,
    pub u: xen_domctl_scheduler_op__bindgen_ty_1,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union xen_domctl_scheduler_op__bindgen_ty_1 {
    pub credit: xen_domctl_sched_credit,
    pub credit2: xen_domctl_sched_credit2,
    pub rtds: xen_domctl_sched_rtds,
    pub v: xen_domctl_scheduler_op__bindgen_ty_1__bindgen_ty_1,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_scheduler_op__bindgen_ty_1__bindgen_ty_1 {
    pub vcpus: __guest_handle_xen_domctl_schedparam_vcpu_t,
    pub nr_vcpus: u32,
    pub padding: u32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_setdomainhandle {
    pub handle: xen_domain_handle_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_setdebugging {
    pub enable: u8,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_irq_permission {
    pub pirq: u32,
    pub allow_access: u8,
    pub pad: [u8; 3usize],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_iomem_permission {
    pub first_mfn: u64,
    pub nr_mfns: u64,
    pub allow_access: u8,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_ioport_permission {
    pub first_port: u32,
    pub nr_ports: u32,
    pub allow_access: u8,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_hypercall_init {
    pub gmfn: u64,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_settimeoffset {
    pub time_offset_seconds: i64,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_hvmcontext {
    pub size: u32,
    pub buffer: __guest_handle_uint8,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_address_size {
    pub size: u32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_sendtrigger {
    pub trigger: u32,
    pub vcpu: u32,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct xen_domctl_assign_device {
    pub dev: u32,
    pub flags: u32,
    pub u: xen_domctl_assign_device__bindgen_ty_1,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union xen_domctl_assign_device__bindgen_ty_1 {
    pub pci: xen_domctl_assign_device__bindgen_ty_1__bindgen_ty_1,
    pub dt: xen_domctl_assign_device__bindgen_ty_1__bindgen_ty_2,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_assign_device__bindgen_ty_1__bindgen_ty_1 {
    pub machine_sbdf: u32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_assign_device__bindgen_ty_1__bindgen_ty_2 {
    pub size: u32,
    pub path: __guest_handle_char,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_get_device_group {
    pub machine_sbdf: u32,
    pub max_sdevs: u32,
    pub num_sdevs: u32,
    pub sdev_array: __guest_handle_uint32,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct xen_domctl_bind_pt_irq {
    pub machine_irq: u32,
    pub irq_type: u32,
    pub u: xen_domctl_bind_pt_irq__bindgen_ty_1,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union xen_domctl_bind_pt_irq__bindgen_ty_1 {
    pub isa: xen_domctl_bind_pt_irq__bindgen_ty_1__bindgen_ty_1,
    pub pci: xen_domctl_bind_pt_irq__bindgen_ty_1__bindgen_ty_2,
    pub msi: xen_domctl_bind_pt_irq__bindgen_ty_1__bindgen_ty_3,
    pub spi: xen_domctl_bind_pt_irq__bindgen_ty_1__bindgen_ty_4,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_bind_pt_irq__bindgen_ty_1__bindgen_ty_1 {
    pub isa_irq: u8,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_bind_pt_irq__bindgen_ty_1__bindgen_ty_2 {
    pub bus: u8,
    pub device: u8,
    pub intx: u8,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_bind_pt_irq__bindgen_ty_1__bindgen_ty_3 {
    pub gvec: u8,
    pub gflags: u32,
    pub gtable: u64,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_bind_pt_irq__bindgen_ty_1__bindgen_ty_4 {
    pub spi: u16,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_memory_mapping {
    pub first_gfn: u64,
    pub first_mfn: u64,
    pub nr_mfns: u64,
    pub add_mapping: u32,
    pub padding: u32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_ioport_mapping {
    pub first_gport: u32,
    pub first_mport: u32,
    pub nr_ports: u32,
    pub add_mapping: u32,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct xen_domctl_ext_vcpucontext {
    pub vcpu: u32,
    pub size: u32,
    pub syscall32_callback_eip: u64,
    pub sysenter_callback_eip: u64,
    pub syscall32_callback_cs: u16,
    pub sysenter_callback_cs: u16,
    pub syscall32_disables_events: u8,
    pub sysenter_disables_events: u8,
    pub __bindgen_anon_1: xen_domctl_ext_vcpucontext__bindgen_ty_1,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union xen_domctl_ext_vcpucontext__bindgen_ty_1 {
    pub mcg_cap: u64,
    pub vmce: hvm_vmce_vcpu,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_set_target {
    pub target: domid_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_cpu_policy {
    pub nr_leaves: u32,
    pub nr_msrs: u32,
    pub leaves: __guest_handle_xen_cpuid_leaf_t,
    pub msrs: __guest_handle_xen_msr_entry_t,
    pub err_leaf: u32,
    pub err_subleaf: u32,
    pub err_msr: u32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_subscribe {
    pub port: u32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_debug_op {
    pub op: u32,
    pub vcpu: u32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_hvmcontext_partial {
    pub type_: u32,
    pub instance: u32,
    pub bufsz: u64,
    pub buffer: __guest_handle_uint8,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_tsc_info {
    pub tsc_mode: u32,
    pub gtsc_khz: u32,
    pub incarnation: u32,
    pub pad: u32,
    pub elapsed_nsec: u64,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_gdbsx_memio {
    pub pgd3val: u64,
    pub gva: u64,
    pub uva: u64,
    pub len: u32,
    pub gwr: u8,
    pub remain: u32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_gdbsx_pauseunp_vcpu {
    pub vcpu: u32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_gdbsx_domstatus {
    pub paused: u8,
    pub vcpu_id: u32,
    pub vcpu_ev: u32,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct xen_domctl_vm_event_op {
    pub op: u32,
    pub mode: u32,
    pub u: xen_domctl_vm_event_op__bindgen_ty_1,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union xen_domctl_vm_event_op__bindgen_ty_1 {
    pub enable: xen_domctl_vm_event_op__bindgen_ty_1__bindgen_ty_1,
    pub version: u32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_vm_event_op__bindgen_ty_1__bindgen_ty_1 {
    pub port: u32,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct xen_domctl_mem_sharing_op {
    pub op: u8,
    pub u: xen_domctl_mem_sharing_op__bindgen_ty_1,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union xen_domctl_mem_sharing_op__bindgen_ty_1 {
    pub enable: u8,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_audit_p2m {
    pub orphans: u64,
    pub m2p_bad: u64,
    pub p2m_bad: u64,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_set_virq_handler {
    pub virq: u32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_vcpuextstate {
    pub vcpu: u32,
    pub xfeature_mask: u64,
    pub size: u64,
    pub buffer: __guest_handle_uint64,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_set_access_required {
    pub access_required: u8,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_set_broken_page_p2m {
    pub pfn: u64,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_cacheflush {
    pub start_pfn: xen_pfn_t,
    pub nr_pfns: xen_pfn_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_paging_mempool {
    pub size: u64,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_vcpu_msr {
    pub index: u32,
    pub reserved: u32,
    pub value: u64,
}
pub type xen_domctl_vcpu_msr_t = xen_domctl_vcpu_msr;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __guest_handle_xen_domctl_vcpu_msr_t {
    pub p: *mut xen_domctl_vcpu_msr_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_vcpu_msrs {
    pub vcpu: u32,
    pub msr_count: u32,
    pub msrs: __guest_handle_xen_domctl_vcpu_msr_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_vnuma {
    pub nr_vnodes: u32,
    pub nr_vmemranges: u32,
    pub nr_vcpus: u32,
    pub pad: u32,
    pub vdistance: __guest_handle_uint,
    pub vcpu_to_vnode: __guest_handle_uint,
    pub vnode_to_pnode: __guest_handle_uint,
    pub vmemrange: __guest_handle_xen_vmemrange_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_psr_cmt_op {
    pub cmd: u32,
    pub data: u32,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct xen_domctl_monitor_op {
    pub op: u32,
    pub event: u32,
    pub u: xen_domctl_monitor_op__bindgen_ty_1,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union xen_domctl_monitor_op__bindgen_ty_1 {
    pub mov_to_cr: xen_domctl_monitor_op__bindgen_ty_1__bindgen_ty_1,
    pub mov_to_msr: xen_domctl_monitor_op__bindgen_ty_1__bindgen_ty_2,
    pub guest_request: xen_domctl_monitor_op__bindgen_ty_1__bindgen_ty_3,
    pub debug_exception: xen_domctl_monitor_op__bindgen_ty_1__bindgen_ty_4,
    pub vmexit: xen_domctl_monitor_op__bindgen_ty_1__bindgen_ty_5,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_monitor_op__bindgen_ty_1__bindgen_ty_1 {
    pub index: u8,
    pub sync: u8,
    pub onchangeonly: u8,
    pub pad1: u8,
    pub pad2: u32,
    pub bitmask: u64,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_monitor_op__bindgen_ty_1__bindgen_ty_2 {
    pub msr: u32,
    pub onchangeonly: u8,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_monitor_op__bindgen_ty_1__bindgen_ty_3 {
    pub sync: u8,
    pub allow_userspace: u8,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_monitor_op__bindgen_ty_1__bindgen_ty_4 {
    pub sync: u8,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_monitor_op__bindgen_ty_1__bindgen_ty_5 {
    pub sync: u8,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_psr_alloc {
    pub cmd: u32,
    pub target: u32,
    pub data: u64,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_vuart_op {
    pub cmd: u32,
    pub type_: u32,
    pub gfn: u64,
    pub console_domid: domid_t,
    pub pad: [u8; 2usize],
    pub evtchn: evtchn_port_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_domctl_vmtrace_op {
    pub cmd: u32,
    pub vcpu: u32,
    pub key: u64,
    pub value: u64,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct xen_domctl {
    pub cmd: u32,
    pub interface_version: u32,
    pub domain: domid_t,
    pub _pad: [u16; 3usize],
    pub u: xen_domctl__bindgen_ty_1,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union xen_domctl__bindgen_ty_1 {
    pub createdomain: xen_domctl_createdomain,
    pub getdomaininfo: xen_domctl_getdomaininfo,
    pub getpageframeinfo3: xen_domctl_getpageframeinfo3,
    pub nodeaffinity: xen_domctl_nodeaffinity,
    pub vcpuaffinity: xen_domctl_vcpuaffinity,
    pub shadow_op: xen_domctl_shadow_op,
    pub max_mem: xen_domctl_max_mem,
    pub vcpucontext: xen_domctl_vcpucontext,
    pub getvcpuinfo: xen_domctl_getvcpuinfo,
    pub max_vcpus: xen_domctl_max_vcpus,
    pub scheduler_op: xen_domctl_scheduler_op,
    pub setdomainhandle: xen_domctl_setdomainhandle,
    pub setdebugging: xen_domctl_setdebugging,
    pub irq_permission: xen_domctl_irq_permission,
    pub iomem_permission: xen_domctl_iomem_permission,
    pub ioport_permission: xen_domctl_ioport_permission,
    pub hypercall_init: xen_domctl_hypercall_init,
    pub settimeoffset: xen_domctl_settimeoffset,
    pub tsc_info: xen_domctl_tsc_info,
    pub hvmcontext: xen_domctl_hvmcontext,
    pub hvmcontext_partial: xen_domctl_hvmcontext_partial,
    pub address_size: xen_domctl_address_size,
    pub sendtrigger: xen_domctl_sendtrigger,
    pub get_device_group: xen_domctl_get_device_group,
    pub assign_device: xen_domctl_assign_device,
    pub bind_pt_irq: xen_domctl_bind_pt_irq,
    pub memory_mapping: xen_domctl_memory_mapping,
    pub ioport_mapping: xen_domctl_ioport_mapping,
    pub ext_vcpucontext: xen_domctl_ext_vcpucontext,
    pub set_target: xen_domctl_set_target,
    pub subscribe: xen_domctl_subscribe,
    pub debug_op: xen_domctl_debug_op,
    pub vm_event_op: xen_domctl_vm_event_op,
    pub mem_sharing_op: xen_domctl_mem_sharing_op,
    pub cpu_policy: xen_domctl_cpu_policy,
    pub vcpuextstate: xen_domctl_vcpuextstate,
    pub vcpu_msrs: xen_domctl_vcpu_msrs,
    pub access_required: xen_domctl_set_access_required,
    pub audit_p2m: xen_domctl_audit_p2m,
    pub set_virq_handler: xen_domctl_set_virq_handler,
    pub gdbsx_guest_memio: xen_domctl_gdbsx_memio,
    pub set_broken_page_p2m: xen_domctl_set_broken_page_p2m,
    pub cacheflush: xen_domctl_cacheflush,
    pub gdbsx_pauseunp_vcpu: xen_domctl_gdbsx_pauseunp_vcpu,
    pub gdbsx_domstatus: xen_domctl_gdbsx_domstatus,
    pub vnuma: xen_domctl_vnuma,
    pub psr_cmt_op: xen_domctl_psr_cmt_op,
    pub monitor_op: xen_domctl_monitor_op,
    pub psr_alloc: xen_domctl_psr_alloc,
    pub vuart_op: xen_domctl_vuart_op,
    pub vmtrace_op: xen_domctl_vmtrace_op,
    pub paging_mempool: xen_domctl_paging_mempool,
    pub pad: [u8; 128usize],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_sysctl_readconsole {
    pub clear: u8,
    pub incremental: u8,
    pub pad0: u8,
    pub pad1: u8,
    pub index: u32,
    pub buffer: __guest_handle_char,
    pub count: u32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_sysctl_tbuf_op {
    pub cmd: u32,
    pub cpu_mask: xenctl_bitmap,
    pub evt_mask: u32,
    pub buffer_mfn: u64,
    pub size: u32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_sysctl_physinfo {
    pub threads_per_core: u32,
    pub cores_per_socket: u32,
    pub nr_cpus: u32,
    pub max_cpu_id: u32,
    pub nr_nodes: u32,
    pub max_node_id: u32,
    pub cpu_khz: u32,
    pub capabilities: u32,
    pub arch_capabilities: u32,
    pub pad: u32,
    pub total_pages: u64,
    pub free_pages: u64,
    pub scrub_pages: u64,
    pub outstanding_pages: u64,
    pub max_mfn: u64,
    pub hw_cap: [u32; 8usize],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_sysctl_sched_id {
    pub sched_id: u32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_sysctl_perfc_desc {
    pub name: [xen_bindings_x86_64_types::c_char; 80usize],
    pub nr_vals: u32,
}
pub type xen_sysctl_perfc_desc_t = xen_sysctl_perfc_desc;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __guest_handle_xen_sysctl_perfc_desc_t {
    pub p: *mut xen_sysctl_perfc_desc_t,
}
pub type xen_sysctl_perfc_val_t = u32;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __guest_handle_xen_sysctl_perfc_val_t {
    pub p: *mut xen_sysctl_perfc_val_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_sysctl_perfc_op {
    pub cmd: u32,
    pub nr_counters: u32,
    pub nr_vals: u32,
    pub desc: __guest_handle_xen_sysctl_perfc_desc_t,
    pub val: __guest_handle_xen_sysctl_perfc_val_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_sysctl_getdomaininfolist {
    pub first_domain: domid_t,
    pub max_domains: u32,
    pub buffer: __guest_handle_xen_domctl_getdomaininfo_t,
    pub num_domains: u32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_sysctl_debug_keys {
    pub keys: __guest_handle_const_char,
    pub nr_keys: u32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_sysctl_cpuinfo {
    pub idletime: u64,
}
pub type xen_sysctl_cpuinfo_t = xen_sysctl_cpuinfo;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __guest_handle_xen_sysctl_cpuinfo_t {
    pub p: *mut xen_sysctl_cpuinfo_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_sysctl_getcpuinfo {
    pub max_cpus: u32,
    pub info: __guest_handle_xen_sysctl_cpuinfo_t,
    pub nr_cpus: u32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_sysctl_availheap {
    pub min_bitwidth: u32,
    pub max_bitwidth: u32,
    pub node: i32,
    pub avail_bytes: u64,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pm_px_val {
    pub freq: u64,
    pub residency: u64,
    pub count: u64,
}
pub type pm_px_val_t = pm_px_val;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __guest_handle_pm_px_val_t {
    pub p: *mut pm_px_val_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pm_px_stat {
    pub total: u8,
    pub usable: u8,
    pub last: u8,
    pub cur: u8,
    pub trans_pt: __guest_handle_uint64,
    pub pt: __guest_handle_pm_px_val_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pm_cx_stat {
    pub nr: u32,
    pub last: u32,
    pub idle_time: u64,
    pub triggers: __guest_handle_uint64,
    pub residencies: __guest_handle_uint64,
    pub nr_pc: u32,
    pub nr_cc: u32,
    pub pc: __guest_handle_uint64,
    pub cc: __guest_handle_uint64,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct xen_sysctl_get_pmstat {
    pub type_: u32,
    pub cpuid: u32,
    pub u: xen_sysctl_get_pmstat__bindgen_ty_1,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union xen_sysctl_get_pmstat__bindgen_ty_1 {
    pub getpx: pm_px_stat,
    pub getcx: pm_cx_stat,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_sysctl_cpu_hotplug {
    pub cpu: u32,
    pub op: u32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_userspace {
    pub scaling_setspeed: u32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_ondemand {
    pub sampling_rate_max: u32,
    pub sampling_rate_min: u32,
    pub sampling_rate: u32,
    pub up_threshold: u32,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct xen_get_cpufreq_para {
    pub cpu_num: u32,
    pub freq_num: u32,
    pub gov_num: u32,
    pub affected_cpus: __guest_handle_uint32,
    pub scaling_available_frequencies: __guest_handle_uint32,
    pub scaling_available_governors: __guest_handle_char,
    pub scaling_driver: [xen_bindings_x86_64_types::c_char; 16usize],
    pub cpuinfo_cur_freq: u32,
    pub cpuinfo_max_freq: u32,
    pub cpuinfo_min_freq: u32,
    pub scaling_cur_freq: u32,
    pub scaling_governor: [xen_bindings_x86_64_types::c_char; 16usize],
    pub scaling_max_freq: u32,
    pub scaling_min_freq: u32,
    pub u: xen_get_cpufreq_para__bindgen_ty_1,
    pub turbo_enabled: i32,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union xen_get_cpufreq_para__bindgen_ty_1 {
    pub userspace: xen_userspace,
    pub ondemand: xen_ondemand,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_set_cpufreq_gov {
    pub scaling_governor: [xen_bindings_x86_64_types::c_char; 16usize],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_set_cpufreq_para {
    pub ctrl_type: u32,
    pub ctrl_value: u32,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct xen_sysctl_pm_op {
    pub cmd: u32,
    pub cpuid: u32,
    pub u: xen_sysctl_pm_op__bindgen_ty_1,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union xen_sysctl_pm_op__bindgen_ty_1 {
    pub get_para: xen_get_cpufreq_para,
    pub set_gov: xen_set_cpufreq_gov,
    pub set_para: xen_set_cpufreq_para,
    pub get_avgfreq: u64,
    pub set_sched_opt_smt: u32,
    pub get_max_cstate: u32,
    pub set_max_cstate: u32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_sysctl_page_offline_op {
    pub cmd: u32,
    pub start: u32,
    pub end: u32,
    pub status: __guest_handle_uint32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_sysctl_lockprof_data {
    pub name: [xen_bindings_x86_64_types::c_char; 40usize],
    pub type_: i32,
    pub idx: i32,
    pub lock_cnt: u64,
    pub block_cnt: u64,
    pub lock_time: u64,
    pub block_time: u64,
}
pub type xen_sysctl_lockprof_data_t = xen_sysctl_lockprof_data;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __guest_handle_xen_sysctl_lockprof_data_t {
    pub p: *mut xen_sysctl_lockprof_data_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_sysctl_lockprof_op {
    pub cmd: u32,
    pub max_elem: u32,
    pub nr_elem: u32,
    pub time: u64,
    pub data: __guest_handle_xen_sysctl_lockprof_data_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_sysctl_cputopo {
    pub core: u32,
    pub socket: u32,
    pub node: u32,
}
pub type xen_sysctl_cputopo_t = xen_sysctl_cputopo;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __guest_handle_xen_sysctl_cputopo_t {
    pub p: *mut xen_sysctl_cputopo_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_sysctl_cputopoinfo {
    pub num_cpus: u32,
    pub cputopo: __guest_handle_xen_sysctl_cputopo_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_sysctl_meminfo {
    pub memsize: u64,
    pub memfree: u64,
}
pub type xen_sysctl_meminfo_t = xen_sysctl_meminfo;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __guest_handle_xen_sysctl_meminfo_t {
    pub p: *mut xen_sysctl_meminfo_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_sysctl_numainfo {
    pub num_nodes: u32,
    pub meminfo: __guest_handle_xen_sysctl_meminfo_t,
    pub distance: __guest_handle_uint32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_sysctl_cpupool_op {
    pub op: u32,
    pub cpupool_id: u32,
    pub sched_id: u32,
    pub domid: u32,
    pub cpu: u32,
    pub n_dom: u32,
    pub cpumap: xenctl_bitmap,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_sysctl_arinc653_schedule {
    pub major_frame: u64,
    pub num_sched_entries: u8,
    pub sched_entries: [xen_sysctl_arinc653_schedule__bindgen_ty_1; 64usize],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_sysctl_arinc653_schedule__bindgen_ty_1 {
    pub dom_handle: xen_domain_handle_t,
    pub vcpu_id: u32,
    pub runtime: u64,
}
pub type xen_sysctl_arinc653_schedule_t = xen_sysctl_arinc653_schedule;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __guest_handle_xen_sysctl_arinc653_schedule_t {
    pub p: *mut xen_sysctl_arinc653_schedule_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_sysctl_credit_schedule {
    pub tslice_ms: u32,
    pub ratelimit_us: u32,
    pub vcpu_migr_delay_us: u32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_sysctl_credit2_schedule {
    pub ratelimit_us: u32,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct xen_sysctl_scheduler_op {
    pub cpupool_id: u32,
    pub sched_id: u32,
    pub cmd: u32,
    pub u: xen_sysctl_scheduler_op__bindgen_ty_1,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union xen_sysctl_scheduler_op__bindgen_ty_1 {
    pub sched_arinc653: xen_sysctl_scheduler_op__bindgen_ty_1_xen_sysctl_sched_arinc653,
    pub sched_credit: xen_sysctl_credit_schedule,
    pub sched_credit2: xen_sysctl_credit2_schedule,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_sysctl_scheduler_op__bindgen_ty_1_xen_sysctl_sched_arinc653 {
    pub schedule: __guest_handle_xen_sysctl_arinc653_schedule_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_sysctl_coverage_op {
    pub cmd: u32,
    pub size: u32,
    pub buffer: __guest_handle_char,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct xen_sysctl_psr_cmt_op {
    pub cmd: u32,
    pub flags: u32,
    pub u: xen_sysctl_psr_cmt_op__bindgen_ty_1,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union xen_sysctl_psr_cmt_op__bindgen_ty_1 {
    pub data: u64,
    pub l3_cache: xen_sysctl_psr_cmt_op__bindgen_ty_1__bindgen_ty_1,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_sysctl_psr_cmt_op__bindgen_ty_1__bindgen_ty_1 {
    pub cpu: u32,
    pub rsvd: u32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_sysctl_pcitopoinfo {
    pub num_devs: u32,
    pub devs: __guest_handle_physdev_pci_device_t,
    pub nodes: __guest_handle_uint32,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct xen_sysctl_psr_alloc {
    pub cmd: u32,
    pub target: u32,
    pub u: xen_sysctl_psr_alloc__bindgen_ty_1,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union xen_sysctl_psr_alloc__bindgen_ty_1 {
    pub cat_info: xen_sysctl_psr_alloc__bindgen_ty_1__bindgen_ty_1,
    pub mba_info: xen_sysctl_psr_alloc__bindgen_ty_1__bindgen_ty_2,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_sysctl_psr_alloc__bindgen_ty_1__bindgen_ty_1 {
    pub cbm_len: u32,
    pub cos_max: u32,
    pub flags: u32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_sysctl_psr_alloc__bindgen_ty_1__bindgen_ty_2 {
    pub thrtl_max: u32,
    pub cos_max: u32,
    pub flags: u32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_sysctl_cpu_levelling_caps {
    pub caps: u32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_sysctl_cpu_featureset {
    pub index: u32,
    pub nr_features: u32,
    pub features: __guest_handle_uint32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_livepatch_name {
    pub name: __guest_handle_char,
    pub size: u16,
    pub pad: [u16; 3usize],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_sysctl_livepatch_upload {
    pub name: xen_livepatch_name,
    pub size: u64,
    pub payload: __guest_handle_uint8,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_livepatch_status {
    pub state: u32,
    pub rc: i32,
}
pub type xen_livepatch_status_t = xen_livepatch_status;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __guest_handle_xen_livepatch_status_t {
    pub p: *mut xen_livepatch_status_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_sysctl_livepatch_get {
    pub name: xen_livepatch_name,
    pub status: xen_livepatch_status,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_sysctl_livepatch_list {
    pub version: u32,
    pub idx: u32,
    pub nr: u32,
    pub pad: u32,
    pub name_total_size: u32,
    pub metadata_total_size: u32,
    pub status: __guest_handle_xen_livepatch_status_t,
    pub name: __guest_handle_char,
    pub len: __guest_handle_uint32,
    pub metadata: __guest_handle_char,
    pub metadata_len: __guest_handle_uint32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_sysctl_livepatch_action {
    pub name: xen_livepatch_name,
    pub cmd: u32,
    pub timeout: u32,
    pub flags: u32,
    pub pad: u32,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct xen_sysctl_livepatch_op {
    pub cmd: u32,
    pub pad: u32,
    pub u: xen_sysctl_livepatch_op__bindgen_ty_1,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union xen_sysctl_livepatch_op__bindgen_ty_1 {
    pub upload: xen_sysctl_livepatch_upload,
    pub list: xen_sysctl_livepatch_list,
    pub get: xen_sysctl_livepatch_get,
    pub action: xen_sysctl_livepatch_action,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_sysctl_cpu_policy {
    pub index: u32,
    pub nr_leaves: u32,
    pub nr_msrs: u32,
    pub _rsvd: u32,
    pub leaves: __guest_handle_xen_cpuid_leaf_t,
    pub msrs: __guest_handle_xen_msr_entry_t,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct xen_sysctl {
    pub cmd: u32,
    pub interface_version: u32,
    pub u: xen_sysctl__bindgen_ty_1,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union xen_sysctl__bindgen_ty_1 {
    pub readconsole: xen_sysctl_readconsole,
    pub tbuf_op: xen_sysctl_tbuf_op,
    pub physinfo: xen_sysctl_physinfo,
    pub cputopoinfo: xen_sysctl_cputopoinfo,
    pub pcitopoinfo: xen_sysctl_pcitopoinfo,
    pub numainfo: xen_sysctl_numainfo,
    pub sched_id: xen_sysctl_sched_id,
    pub perfc_op: xen_sysctl_perfc_op,
    pub getdomaininfolist: xen_sysctl_getdomaininfolist,
    pub debug_keys: xen_sysctl_debug_keys,
    pub getcpuinfo: xen_sysctl_getcpuinfo,
    pub availheap: xen_sysctl_availheap,
    pub get_pmstat: xen_sysctl_get_pmstat,
    pub cpu_hotplug: xen_sysctl_cpu_hotplug,
    pub pm_op: xen_sysctl_pm_op,
    pub page_offline: xen_sysctl_page_offline_op,
    pub lockprof_op: xen_sysctl_lockprof_op,
    pub cpupool_op: xen_sysctl_cpupool_op,
    pub scheduler_op: xen_sysctl_scheduler_op,
    pub coverage_op: xen_sysctl_coverage_op,
    pub psr_cmt_op: xen_sysctl_psr_cmt_op,
    pub psr_alloc: xen_sysctl_psr_alloc,
    pub cpu_levelling_caps: xen_sysctl_cpu_levelling_caps,
    pub cpu_featureset: xen_sysctl_cpu_featureset,
    pub livepatch: xen_sysctl_livepatch_op,
    pub cpu_policy: xen_sysctl_cpu_policy,
    pub pad: [u8; 128usize],
}
pub type ioservid_t = u16;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_dm_op_modified_memory_extent {
    pub nr: u32,
    pub pad: u32,
    pub first_pfn: u64,
}
pub const hvmmem_type_t_HVMMEM_ram_rw: hvmmem_type_t = 0;
pub const hvmmem_type_t_HVMMEM_ram_ro: hvmmem_type_t = 1;
pub const hvmmem_type_t_HVMMEM_mmio_dm: hvmmem_type_t = 2;
pub const hvmmem_type_t_HVMMEM_unused: hvmmem_type_t = 3;
pub const hvmmem_type_t_HVMMEM_ioreq_server: hvmmem_type_t = 4;
pub type hvmmem_type_t = xen_bindings_x86_64_types::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_flask_load {
    pub buffer: __guest_handle_char,
    pub size: u32,
}
pub type xen_flask_load_t = xen_flask_load;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_flask_setenforce {
    pub enforcing: u32,
}
pub type xen_flask_setenforce_t = xen_flask_setenforce;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_flask_sid_context {
    pub sid: u32,
    pub size: u32,
    pub context: __guest_handle_char,
}
pub type xen_flask_sid_context_t = xen_flask_sid_context;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_flask_access {
    pub ssid: u32,
    pub tsid: u32,
    pub tclass: u32,
    pub req: u32,
    pub allowed: u32,
    pub audit_allow: u32,
    pub audit_deny: u32,
    pub seqno: u32,
}
pub type xen_flask_access_t = xen_flask_access;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_flask_transition {
    pub ssid: u32,
    pub tsid: u32,
    pub tclass: u32,
    pub newsid: u32,
}
pub type xen_flask_transition_t = xen_flask_transition;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_flask_boolean {
    pub bool_id: u32,
    pub enforcing: u8,
    pub pending: u8,
    pub new_value: u8,
    pub commit: u8,
    pub size: u32,
    pub name: __guest_handle_char,
}
pub type xen_flask_boolean_t = xen_flask_boolean;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_flask_setavc_threshold {
    pub threshold: u32,
}
pub type xen_flask_setavc_threshold_t = xen_flask_setavc_threshold;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_flask_hash_stats {
    pub entries: u32,
    pub buckets_used: u32,
    pub buckets_total: u32,
    pub max_chain_len: u32,
}
pub type xen_flask_hash_stats_t = xen_flask_hash_stats;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_flask_cache_stats {
    pub cpu: u32,
    pub lookups: u32,
    pub hits: u32,
    pub misses: u32,
    pub allocations: u32,
    pub reclaims: u32,
    pub frees: u32,
}
pub type xen_flask_cache_stats_t = xen_flask_cache_stats;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_flask_ocontext {
    pub ocon: u32,
    pub sid: u32,
    pub low: u64,
    pub high: u64,
}
pub type xen_flask_ocontext_t = xen_flask_ocontext;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_flask_peersid {
    pub evtchn: evtchn_port_t,
    pub sid: u32,
}
pub type xen_flask_peersid_t = xen_flask_peersid;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_flask_relabel {
    pub domid: u32,
    pub sid: u32,
}
pub type xen_flask_relabel_t = xen_flask_relabel;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_flask_devicetree_label {
    pub sid: u32,
    pub length: u32,
    pub path: __guest_handle_char,
}
pub type xen_flask_devicetree_label_t = xen_flask_devicetree_label;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct xen_flask_op {
    pub cmd: u32,
    pub interface_version: u32,
    pub u: xen_flask_op__bindgen_ty_1,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union xen_flask_op__bindgen_ty_1 {
    pub load: xen_flask_load_t,
    pub enforce: xen_flask_setenforce_t,
    pub sid_context: xen_flask_sid_context_t,
    pub access: xen_flask_access_t,
    pub transition: xen_flask_transition_t,
    pub boolean: xen_flask_boolean_t,
    pub setavc_threshold: xen_flask_setavc_threshold_t,
    pub hash_stats: xen_flask_hash_stats_t,
    pub cache_stats: xen_flask_cache_stats_t,
    pub ocontext: xen_flask_ocontext_t,
    pub peersid: xen_flask_peersid_t,
    pub relabel: xen_flask_relabel_t,
    pub devicetree_label: xen_flask_devicetree_label_t,
}
pub type xen_flask_op_t = xen_flask_op;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct xen_kexec_segment {
    pub buf: xen_kexec_segment__bindgen_ty_1,
    pub buf_size: u64,
    pub dest_maddr: u64,
    pub dest_size: u64,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union xen_kexec_segment__bindgen_ty_1 {
    pub h: __guest_handle_const_void,
    pub _pad: u64,
}
pub type xen_kexec_segment_t = xen_kexec_segment;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xenpf_pcpu_version {
    pub xen_cpuid: u32,
    pub max_present: u32,
    pub vendor_id: [xen_bindings_x86_64_types::c_char; 12usize],
    pub family: u32,
    pub model: u32,
    pub stepping: u32,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct xenpf_resource_entry {
    pub u: xenpf_resource_entry__bindgen_ty_1,
    pub rsvd: u32,
    pub idx: u64,
    pub val: u64,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union xenpf_resource_entry__bindgen_ty_1 {
    pub cmd: u32,
    pub ret: i32,
}
pub type xenpf_resource_entry_t = xenpf_resource_entry;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xenpf_ucode_revision {
    pub cpu: u32,
    pub signature: u32,
    pub pf: u32,
    pub revision: u32,
}
pub const xentoollog_level_XTL_NONE: xentoollog_level = 0;
pub const xentoollog_level_XTL_DEBUG: xentoollog_level = 1;
pub const xentoollog_level_XTL_VERBOSE: xentoollog_level = 2;
pub const xentoollog_level_XTL_DETAIL: xentoollog_level = 3;
pub const xentoollog_level_XTL_PROGRESS: xentoollog_level = 4;
pub const xentoollog_level_XTL_INFO: xentoollog_level = 5;
pub const xentoollog_level_XTL_NOTICE: xentoollog_level = 6;
pub const xentoollog_level_XTL_WARN: xentoollog_level = 7;
pub const xentoollog_level_XTL_ERROR: xentoollog_level = 8;
pub const xentoollog_level_XTL_CRITICAL: xentoollog_level = 9;
pub const xentoollog_level_XTL_NUM_LEVELS: xentoollog_level = 10;
pub type xentoollog_level = xen_bindings_x86_64_types::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xentoollog_logger {
    pub vmessage: ::core::option::Option<
        unsafe extern "C" fn(
            logger: *mut xentoollog_logger,
            level: xentoollog_level,
            errnoval: xen_bindings_x86_64_types::c_int,
            context: *const xen_bindings_x86_64_types::c_char,
            format: *const xen_bindings_x86_64_types::c_char,
            al: *mut __va_list_tag,
        ),
    >,
    pub progress: ::core::option::Option<
        unsafe extern "C" fn(
            logger: *mut xentoollog_logger,
            context: *const xen_bindings_x86_64_types::c_char,
            doing_what: *const xen_bindings_x86_64_types::c_char,
            percent: xen_bindings_x86_64_types::c_int,
            done: xen_bindings_x86_64_types::c_ulong,
            total: xen_bindings_x86_64_types::c_ulong,
        ),
    >,
    pub destroy: ::core::option::Option<unsafe extern "C" fn(logger: *mut xentoollog_logger)>,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct start_info_x86_32 {
    pub magic: [xen_bindings_x86_64_types::c_char; 32usize],
    pub nr_pages: u32,
    pub shared_info: u32,
    pub flags: u32,
    pub store_mfn: u32,
    pub store_evtchn: u32,
    pub console: start_info_x86_32__bindgen_ty_1,
    pub pt_base: u32,
    pub nr_pt_frames: u32,
    pub mfn_list: u32,
    pub mod_start: u32,
    pub mod_len: u32,
    pub cmd_line: [i8; 1024usize],
    pub first_p2m_pfn: u32,
    pub nr_p2m_frames: u32,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union start_info_x86_32__bindgen_ty_1 {
    pub domU: start_info_x86_32__bindgen_ty_1__bindgen_ty_1,
    pub dom0: start_info_x86_32__bindgen_ty_1__bindgen_ty_2,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct start_info_x86_32__bindgen_ty_1__bindgen_ty_1 {
    pub mfn: u32,
    pub evtchn: u32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct start_info_x86_32__bindgen_ty_1__bindgen_ty_2 {
    pub info_off: u32,
    pub info_size: u32,
}
pub type start_info_x86_32_t = start_info_x86_32;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct trap_info_x86_32 {
    pub vector: u8,
    pub flags: u8,
    pub cs: u16,
    pub address: u32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cpu_user_regs_x86_32 {
    pub ebx: u32,
    pub ecx: u32,
    pub edx: u32,
    pub esi: u32,
    pub edi: u32,
    pub ebp: u32,
    pub eax: u32,
    pub error_code: u16,
    pub entry_vector: u16,
    pub eip: u32,
    pub cs: u16,
    pub saved_upcall_mask: u8,
    pub _pad0: u8,
    pub eflags: u32,
    pub esp: u32,
    pub ss: u16,
    pub _pad1: u16,
    pub es: u16,
    pub _pad2: u16,
    pub ds: u16,
    pub _pad3: u16,
    pub fs: u16,
    pub _pad4: u16,
    pub gs: u16,
    pub _pad5: u16,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct vcpu_guest_context_x86_32 {
    pub fpu_ctxt: vcpu_guest_context_x86_32__bindgen_ty_1,
    pub flags: u32,
    pub user_regs: cpu_user_regs_x86_32,
    pub trap_ctxt: [trap_info_x86_32; 256usize],
    pub ldt_base: u32,
    pub ldt_ents: u32,
    pub gdt_frames: [u32; 16usize],
    pub gdt_ents: u32,
    pub kernel_ss: u32,
    pub kernel_sp: u32,
    pub ctrlreg: [u32; 8usize],
    pub debugreg: [u32; 8usize],
    pub event_callback_cs: u32,
    pub event_callback_eip: u32,
    pub failsafe_callback_cs: u32,
    pub failsafe_callback_eip: u32,
    pub vm_assist: u32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct vcpu_guest_context_x86_32__bindgen_ty_1 {
    pub x: [xen_bindings_x86_64_types::c_char; 512usize],
}
pub type vcpu_guest_context_x86_32_t = vcpu_guest_context_x86_32;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct arch_vcpu_info_x86_32 {
    pub cr2: u32,
    pub pad: [u32; 5usize],
}
#[repr(C, packed(4))]
#[derive(Debug, Copy, Clone)]
pub struct vcpu_time_info_x86_32 {
    pub version: u32,
    pub pad0: u32,
    pub tsc_timestamp: u64,
    pub system_time: u64,
    pub tsc_to_system_mul: u32,
    pub tsc_shift: i8,
    pub flags: u8,
    pub pad1: [u8; 2usize],
}
pub type vcpu_time_info_x86_32_t = vcpu_time_info_x86_32;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct vcpu_info_x86_32 {
    pub evtchn_upcall_pending: u8,
    pub evtchn_upcall_mask: u8,
    pub evtchn_pending_sel: u32,
    pub arch: arch_vcpu_info_x86_32,
    pub time: vcpu_time_info_x86_32_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct arch_shared_info_x86_32 {
    pub max_pfn: u32,
    pub pfn_to_mfn_frame_list_list: u32,
    pub nmi_reason: u32,
    pub p2m_cr3: u32,
    pub p2m_vaddr: u32,
    pub p2m_generation: u32,
    pub wc_sec_hi: u32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct shared_info_x86_32 {
    pub vcpu_info: [vcpu_info_x86_32; 32usize],
    pub evtchn_pending: [u32; 32usize],
    pub evtchn_mask: [u32; 32usize],
    pub wc_version: u32,
    pub wc_sec: u32,
    pub wc_nsec: u32,
    pub arch: arch_shared_info_x86_32,
}
pub type shared_info_x86_32_t = shared_info_x86_32;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct start_info_x86_64 {
    pub magic: [xen_bindings_x86_64_types::c_char; 32usize],
    pub nr_pages: u64,
    pub shared_info: u64,
    pub flags: u32,
    pub store_mfn: u64,
    pub store_evtchn: u32,
    pub console: start_info_x86_64__bindgen_ty_1,
    pub pt_base: u64,
    pub nr_pt_frames: u64,
    pub mfn_list: u64,
    pub mod_start: u64,
    pub mod_len: u64,
    pub cmd_line: [i8; 1024usize],
    pub first_p2m_pfn: u64,
    pub nr_p2m_frames: u64,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union start_info_x86_64__bindgen_ty_1 {
    pub domU: start_info_x86_64__bindgen_ty_1__bindgen_ty_1,
    pub dom0: start_info_x86_64__bindgen_ty_1__bindgen_ty_2,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct start_info_x86_64__bindgen_ty_1__bindgen_ty_1 {
    pub mfn: u64,
    pub evtchn: u32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct start_info_x86_64__bindgen_ty_1__bindgen_ty_2 {
    pub info_off: u32,
    pub info_size: u32,
}
pub type start_info_x86_64_t = start_info_x86_64;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct trap_info_x86_64 {
    pub vector: u8,
    pub flags: u8,
    pub cs: u16,
    pub address: u64,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct cpu_user_regs_x86_64 {
    pub __bindgen_anon_1: cpu_user_regs_x86_64__bindgen_ty_1,
    pub __bindgen_anon_2: cpu_user_regs_x86_64__bindgen_ty_2,
    pub __bindgen_anon_3: cpu_user_regs_x86_64__bindgen_ty_3,
    pub __bindgen_anon_4: cpu_user_regs_x86_64__bindgen_ty_4,
    pub __bindgen_anon_5: cpu_user_regs_x86_64__bindgen_ty_5,
    pub __bindgen_anon_6: cpu_user_regs_x86_64__bindgen_ty_6,
    pub __bindgen_anon_7: cpu_user_regs_x86_64__bindgen_ty_7,
    pub __bindgen_anon_8: cpu_user_regs_x86_64__bindgen_ty_8,
    pub __bindgen_anon_9: cpu_user_regs_x86_64__bindgen_ty_9,
    pub __bindgen_anon_10: cpu_user_regs_x86_64__bindgen_ty_10,
    pub __bindgen_anon_11: cpu_user_regs_x86_64__bindgen_ty_11,
    pub __bindgen_anon_12: cpu_user_regs_x86_64__bindgen_ty_12,
    pub __bindgen_anon_13: cpu_user_regs_x86_64__bindgen_ty_13,
    pub __bindgen_anon_14: cpu_user_regs_x86_64__bindgen_ty_14,
    pub __bindgen_anon_15: cpu_user_regs_x86_64__bindgen_ty_15,
    pub error_code: u32,
    pub entry_vector: u32,
    pub __bindgen_anon_16: cpu_user_regs_x86_64__bindgen_ty_16,
    pub cs: u16,
    pub _pad0: [u16; 1usize],
    pub saved_upcall_mask: u8,
    pub _pad1: [u8; 3usize],
    pub __bindgen_anon_17: cpu_user_regs_x86_64__bindgen_ty_17,
    pub __bindgen_anon_18: cpu_user_regs_x86_64__bindgen_ty_18,
    pub ss: u16,
    pub _pad2: [u16; 3usize],
    pub es: u16,
    pub _pad3: [u16; 3usize],
    pub ds: u16,
    pub _pad4: [u16; 3usize],
    pub fs: u16,
    pub _pad5: [u16; 3usize],
    pub gs: u16,
    pub _pad6: [u16; 3usize],
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union cpu_user_regs_x86_64__bindgen_ty_1 {
    pub r15: u64,
    pub e15: u64,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union cpu_user_regs_x86_64__bindgen_ty_2 {
    pub r14: u64,
    pub e14: u64,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union cpu_user_regs_x86_64__bindgen_ty_3 {
    pub r13: u64,
    pub e13: u64,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union cpu_user_regs_x86_64__bindgen_ty_4 {
    pub r12: u64,
    pub e12: u64,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union cpu_user_regs_x86_64__bindgen_ty_5 {
    pub rbp: u64,
    pub ebp: u64,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union cpu_user_regs_x86_64__bindgen_ty_6 {
    pub rbx: u64,
    pub ebx: u64,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union cpu_user_regs_x86_64__bindgen_ty_7 {
    pub r11: u64,
    pub e11: u64,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union cpu_user_regs_x86_64__bindgen_ty_8 {
    pub r10: u64,
    pub e10: u64,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union cpu_user_regs_x86_64__bindgen_ty_9 {
    pub r9: u64,
    pub e9: u64,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union cpu_user_regs_x86_64__bindgen_ty_10 {
    pub r8: u64,
    pub e8: u64,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union cpu_user_regs_x86_64__bindgen_ty_11 {
    pub rax: u64,
    pub eax: u64,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union cpu_user_regs_x86_64__bindgen_ty_12 {
    pub rcx: u64,
    pub ecx: u64,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union cpu_user_regs_x86_64__bindgen_ty_13 {
    pub rdx: u64,
    pub edx: u64,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union cpu_user_regs_x86_64__bindgen_ty_14 {
    pub rsi: u64,
    pub esi: u64,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union cpu_user_regs_x86_64__bindgen_ty_15 {
    pub rdi: u64,
    pub edi: u64,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union cpu_user_regs_x86_64__bindgen_ty_16 {
    pub rip: u64,
    pub eip: u64,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union cpu_user_regs_x86_64__bindgen_ty_17 {
    pub rflags: u64,
    pub eflags: u64,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union cpu_user_regs_x86_64__bindgen_ty_18 {
    pub rsp: u64,
    pub esp: u64,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct vcpu_guest_context_x86_64 {
    pub fpu_ctxt: vcpu_guest_context_x86_64__bindgen_ty_1,
    pub flags: u64,
    pub user_regs: cpu_user_regs_x86_64,
    pub trap_ctxt: [trap_info_x86_64; 256usize],
    pub ldt_base: u64,
    pub ldt_ents: u64,
    pub gdt_frames: [u64; 16usize],
    pub gdt_ents: u64,
    pub kernel_ss: u64,
    pub kernel_sp: u64,
    pub ctrlreg: [u64; 8usize],
    pub debugreg: [u64; 8usize],
    pub event_callback_eip: u64,
    pub failsafe_callback_eip: u64,
    pub syscall_callback_eip: u64,
    pub vm_assist: u64,
    pub fs_base: u64,
    pub gs_base_kernel: u64,
    pub gs_base_user: u64,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct vcpu_guest_context_x86_64__bindgen_ty_1 {
    pub x: [xen_bindings_x86_64_types::c_char; 512usize],
}
pub type vcpu_guest_context_x86_64_t = vcpu_guest_context_x86_64;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct arch_vcpu_info_x86_64 {
    pub cr2: u64,
    pub pad: u64,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct vcpu_time_info_x86_64 {
    pub version: u32,
    pub pad0: u32,
    pub tsc_timestamp: u64,
    pub system_time: u64,
    pub tsc_to_system_mul: u32,
    pub tsc_shift: i8,
    pub flags: u8,
    pub pad1: [u8; 2usize],
}
pub type vcpu_time_info_x86_64_t = vcpu_time_info_x86_64;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct vcpu_info_x86_64 {
    pub evtchn_upcall_pending: u8,
    pub evtchn_upcall_mask: u8,
    pub evtchn_pending_sel: u64,
    pub arch: arch_vcpu_info_x86_64,
    pub time: vcpu_time_info_x86_64_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct arch_shared_info_x86_64 {
    pub max_pfn: u64,
    pub pfn_to_mfn_frame_list_list: u64,
    pub nmi_reason: u64,
    pub p2m_cr3: u64,
    pub p2m_vaddr: u64,
    pub p2m_generation: u64,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct shared_info_x86_64 {
    pub vcpu_info: [vcpu_info_x86_64; 32usize],
    pub evtchn_pending: [u64; 64usize],
    pub evtchn_mask: [u64; 64usize],
    pub wc_version: u32,
    pub wc_sec: u32,
    pub wc_nsec: u32,
    pub wc_sec_hi: u32,
    pub arch: arch_shared_info_x86_64,
}
pub type shared_info_x86_64_t = shared_info_x86_64;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct mcinfo_msr {
    pub reg: u64,
    pub value: u64,
}
pub type xen_mcinfo_msr_t = mcinfo_msr;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct mc_info {
    pub mi_nentries: u32,
    pub flags: u32,
    pub mi_data: [u64; 95usize],
}
pub type mc_info_t = mc_info;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __guest_handle_mc_info_t {
    pub p: *mut mc_info_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct mcinfo_logical_cpu {
    pub mc_cpunr: u32,
    pub mc_chipid: u32,
    pub mc_coreid: u16,
    pub mc_threadid: u16,
    pub mc_apicid: u32,
    pub mc_clusterid: u32,
    pub mc_ncores: u32,
    pub mc_ncores_active: u32,
    pub mc_nthreads: u32,
    pub mc_cpuid_level: i32,
    pub mc_family: u32,
    pub mc_vendor: u32,
    pub mc_model: u32,
    pub mc_step: u32,
    pub mc_vendorid: [xen_bindings_x86_64_types::c_char; 16usize],
    pub mc_brandid: [xen_bindings_x86_64_types::c_char; 64usize],
    pub mc_cpu_caps: [u32; 7usize],
    pub mc_cache_size: u32,
    pub mc_cache_alignment: u32,
    pub mc_nmsrvals: i32,
    pub mc_msrvalues: [xen_mcinfo_msr_t; 8usize],
}
pub type xen_mc_logical_cpu_t = mcinfo_logical_cpu;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __guest_handle_xen_mc_logical_cpu_t {
    pub p: *mut xen_mc_logical_cpu_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_mc_fetch {
    pub flags: u32,
    pub _pad0: u32,
    pub fetch_id: u64,
    pub data: __guest_handle_mc_info_t,
}
pub type xen_mc_fetch_t = xen_mc_fetch;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_mc_notifydomain {
    pub mc_domid: u16,
    pub mc_vcpuid: u16,
    pub flags: u32,
}
pub type xen_mc_notifydomain_t = xen_mc_notifydomain;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_mc_physcpuinfo {
    pub ncpus: u32,
    pub _pad0: u32,
    pub info: __guest_handle_xen_mc_logical_cpu_t,
}
pub type xen_mc_physcpuinfo_t = xen_mc_physcpuinfo;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_mc_msrinject {
    pub mcinj_cpunr: u32,
    pub mcinj_flags: u32,
    pub mcinj_count: u32,
    pub mcinj_domid: domid_t,
    pub _pad0: u16,
    pub mcinj_msr: [xen_mcinfo_msr_t; 8usize],
}
pub type xen_mc_msrinject_t = xen_mc_msrinject;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_mc_mceinject {
    pub mceinj_cpunr: xen_bindings_x86_64_types::c_uint,
}
pub type xen_mc_mceinject_t = xen_mc_mceinject;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xen_mc_inject_v2 {
    pub flags: u32,
    pub cpumap: xenctl_bitmap_t,
}
pub type xen_mc_inject_v2_t = xen_mc_inject_v2;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct xen_mc {
    pub cmd: u32,
    pub interface_version: u32,
    pub u: xen_mc__bindgen_ty_1,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union xen_mc__bindgen_ty_1 {
    pub mc_fetch: xen_mc_fetch_t,
    pub mc_notifydomain: xen_mc_notifydomain_t,
    pub mc_physcpuinfo: xen_mc_physcpuinfo_t,
    pub mc_msrinject: xen_mc_msrinject_t,
    pub mc_mceinject: xen_mc_mceinject_t,
    pub mc_inject_v2: xen_mc_inject_v2_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xc_interface_core {
    _unused: [u8; 0],
}
pub type xc_interface = xc_interface_core;
pub const xc_error_code_XC_ERROR_NONE: xc_error_code = 0;
pub const xc_error_code_XC_INTERNAL_ERROR: xc_error_code = 1;
pub const xc_error_code_XC_INVALID_KERNEL: xc_error_code = 2;
pub const xc_error_code_XC_INVALID_PARAM: xc_error_code = 3;
pub const xc_error_code_XC_OUT_OF_MEMORY: xc_error_code = 4;
pub type xc_error_code = xen_bindings_x86_64_types::c_uint;
pub const xc_open_flags_XC_OPENFLAG_DUMMY: xc_open_flags = 1;
pub const xc_open_flags_XC_OPENFLAG_NON_REENTRANT: xc_open_flags = 2;
pub type xc_open_flags = xen_bindings_x86_64_types::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xencall_handle {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xenforeignmemory_handle {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xendevicemodel_handle {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xc_hypercall_buffer {
    pub hbuf: *mut xen_bindings_x86_64_types::c_void,
    pub param_shadow: *mut xc_hypercall_buffer,
    pub dir: xen_bindings_x86_64_types::c_int,
    pub ubuf: *mut xen_bindings_x86_64_types::c_void,
    pub sz: usize,
}
pub type xc_hypercall_buffer_t = xc_hypercall_buffer;
extern "C" {
    pub static mut xc__hypercall_buffer_HYPERCALL_BUFFER_NULL: xc_hypercall_buffer_t;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xc_hypercall_buffer_array {
    _unused: [u8; 0],
}
pub type xc_hypercall_buffer_array_t = xc_hypercall_buffer_array;
pub type xc_cpumap_t = *mut u8;
pub type xc_nodemap_t = *mut u8;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xc_core_header {
    pub xch_magic: xen_bindings_x86_64_types::c_uint,
    pub xch_nr_vcpus: xen_bindings_x86_64_types::c_uint,
    pub xch_nr_pages: xen_bindings_x86_64_types::c_uint,
    pub xch_ctxt_offset: xen_bindings_x86_64_types::c_uint,
    pub xch_index_offset: xen_bindings_x86_64_types::c_uint,
    pub xch_pages_offset: xen_bindings_x86_64_types::c_uint,
}
pub type xc_core_header_t = xc_core_header;
pub type xc_domaininfo_t = xen_domctl_getdomaininfo_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub union vcpu_guest_context_any_t {
    pub x64: vcpu_guest_context_x86_64_t,
    pub x32: vcpu_guest_context_x86_32_t,
    pub c: vcpu_guest_context_t,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union shared_info_any_t {
    pub x64: shared_info_x86_64_t,
    pub x32: shared_info_x86_32_t,
    pub s: shared_info_t,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union start_info_any_t {
    pub x64: start_info_x86_64_t,
    pub x32: start_info_x86_32_t,
    pub s: start_info_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xc_vcpu_extstate {
    pub xfeature_mask: u64,
    pub size: u64,
    pub buffer: *mut xen_bindings_x86_64_types::c_void,
}
pub type xc_vcpu_extstate_t = xc_vcpu_extstate;
pub type dumpcore_rtn_t = ::core::option::Option<
    unsafe extern "C" fn(
        xch: *mut xc_interface,
        arg: *mut xen_bindings_x86_64_types::c_void,
        buffer: *mut xen_bindings_x86_64_types::c_char,
        length: xen_bindings_x86_64_types::c_uint,
    ) -> xen_bindings_x86_64_types::c_int,
>;
pub type xc_vcpuinfo_t = xen_domctl_getvcpuinfo;
pub type xc_shadow_op_stats_t = xen_domctl_shadow_op_stats;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xc_cpupoolinfo {
    pub cpupool_id: u32,
    pub sched_id: u32,
    pub n_dom: u32,
    pub cpumap: xc_cpumap_t,
}
pub type xc_cpupoolinfo_t = xc_cpupoolinfo;
pub type xc_evtchn_port_or_error_t = xen_bindings_x86_64_types::c_int;
pub type xc_evtchn_status_t = evtchn_status;
pub type xc_physinfo_t = xen_sysctl_physinfo;
pub type xc_cputopo_t = xen_sysctl_cputopo;
pub type xc_numainfo_t = xen_sysctl_numainfo;
pub type xc_meminfo_t = xen_sysctl_meminfo;
pub type xc_pcitopoinfo_t = xen_sysctl_pcitopoinfo;
pub type xc_cpu_to_node_t = u32;
pub type xc_cpu_to_socket_t = u32;
pub type xc_cpu_to_core_t = u32;
pub type xc_node_to_memsize_t = u64;
pub type xc_node_to_memfree_t = u64;
pub type xc_node_to_node_dist_t = u32;
pub type xc_cpuinfo_t = xen_sysctl_cpuinfo;
#[repr(C, packed)]
#[derive(Debug, Copy, Clone)]
pub struct e820entry {
    pub addr: u64,
    pub size: u64,
    pub type_: u32,
}
pub type xc_perfc_desc_t = xen_sysctl_perfc_desc_t;
pub type xc_perfc_val_t = xen_sysctl_perfc_val_t;
pub type xc_lockprof_data_t = xen_sysctl_lockprof_data_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xc_error {
    pub code: xc_error_code,
    pub message: [xen_bindings_x86_64_types::c_char; 1024usize],
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct xc_xend_cpuid {
    pub __bindgen_anon_1: xc_xend_cpuid__bindgen_ty_1,
    pub policy: [*mut xen_bindings_x86_64_types::c_char; 4usize],
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union xc_xend_cpuid__bindgen_ty_1 {
    pub __bindgen_anon_1: xc_xend_cpuid__bindgen_ty_1__bindgen_ty_1,
    pub input: [u32; 2usize],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xc_xend_cpuid__bindgen_ty_1__bindgen_ty_1 {
    pub leaf: u32,
    pub subleaf: u32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xc_px_val {
    pub freq: u64,
    pub residency: u64,
    pub count: u64,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xc_px_stat {
    pub total: u8,
    pub usable: u8,
    pub last: u8,
    pub cur: u8,
    pub trans_pt: *mut u64,
    pub pt: *mut xc_px_val,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xc_cx_stat {
    pub nr: u32,
    pub last: u32,
    pub idle_time: u64,
    pub triggers: *mut u64,
    pub residencies: *mut u64,
    pub nr_pc: u32,
    pub nr_cc: u32,
    pub pc: *mut u64,
    pub cc: *mut u64,
}
pub type xc_cx_stat_t = xc_cx_stat;
pub type xc_userspace_t = xen_userspace;
pub type xc_ondemand_t = xen_ondemand;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct xc_get_cpufreq_para {
    pub cpu_num: u32,
    pub freq_num: u32,
    pub gov_num: u32,
    pub affected_cpus: *mut u32,
    pub scaling_available_frequencies: *mut u32,
    pub scaling_available_governors: *mut xen_bindings_x86_64_types::c_char,
    pub scaling_driver: [xen_bindings_x86_64_types::c_char; 16usize],
    pub cpuinfo_cur_freq: u32,
    pub cpuinfo_max_freq: u32,
    pub cpuinfo_min_freq: u32,
    pub scaling_cur_freq: u32,
    pub scaling_governor: [xen_bindings_x86_64_types::c_char; 16usize],
    pub scaling_max_freq: u32,
    pub scaling_min_freq: u32,
    pub u: xc_get_cpufreq_para__bindgen_ty_1,
    pub turbo_enabled: i32,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union xc_get_cpufreq_para__bindgen_ty_1 {
    pub userspace: xc_userspace_t,
    pub ondemand: xc_ondemand_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct elf_binary {
    _unused: [u8; 0],
}
pub type xc_resource_entry_t = xenpf_resource_entry_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xc_resource_op {
    pub result: u64,
    pub cpu: u32,
    pub nr_entries: u32,
    pub entries: *mut xc_resource_entry_t,
}
pub type xc_resource_op_t = xc_resource_op;
pub const xc_psr_cmt_type_XC_PSR_CMT_L3_OCCUPANCY: xc_psr_cmt_type = 0;
pub const xc_psr_cmt_type_XC_PSR_CMT_TOTAL_MEM_COUNT: xc_psr_cmt_type = 1;
pub const xc_psr_cmt_type_XC_PSR_CMT_LOCAL_MEM_COUNT: xc_psr_cmt_type = 2;
pub type xc_psr_cmt_type = xen_bindings_x86_64_types::c_uint;
pub const xc_psr_type_XC_PSR_CAT_L3_CBM: xc_psr_type = 1;
pub const xc_psr_type_XC_PSR_CAT_L3_CBM_CODE: xc_psr_type = 2;
pub const xc_psr_type_XC_PSR_CAT_L3_CBM_DATA: xc_psr_type = 3;
pub const xc_psr_type_XC_PSR_CAT_L2_CBM: xc_psr_type = 4;
pub const xc_psr_type_XC_PSR_MBA_THRTL: xc_psr_type = 5;
pub type xc_psr_type = xen_bindings_x86_64_types::c_uint;
pub const xc_psr_feat_type_XC_PSR_CAT_L3: xc_psr_feat_type = 0;
pub const xc_psr_feat_type_XC_PSR_CAT_L2: xc_psr_feat_type = 1;
pub const xc_psr_feat_type_XC_PSR_MBA: xc_psr_feat_type = 2;
pub type xc_psr_feat_type = xen_bindings_x86_64_types::c_uint;
#[repr(C)]
#[derive(Copy, Clone)]
pub union xc_psr_hw_info {
    pub cat: xc_psr_hw_info__bindgen_ty_1,
    pub mba: xc_psr_hw_info__bindgen_ty_2,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xc_psr_hw_info__bindgen_ty_1 {
    pub cos_max: u32,
    pub cbm_len: u32,
    pub cdp_enabled: bool,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xc_psr_hw_info__bindgen_ty_2 {
    pub cos_max: u32,
    pub thrtl_max: u32,
    pub linear: bool,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xengntdev_handle {
    _unused: [u8; 0],
}
pub type xengnttab_handle = xengntdev_handle;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct xengnttab_grant_copy_segment {
    pub source: xengnttab_grant_copy_segment_xengnttab_copy_ptr,
    pub dest: xengnttab_grant_copy_segment_xengnttab_copy_ptr,
    pub len: u16,
    pub flags: u16,
    pub status: i16,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union xengnttab_grant_copy_segment_xengnttab_copy_ptr {
    pub virt: *mut xen_bindings_x86_64_types::c_void,
    pub foreign: xengnttab_grant_copy_segment_xengnttab_copy_ptr__bindgen_ty_1,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xengnttab_grant_copy_segment_xengnttab_copy_ptr__bindgen_ty_1 {
    pub ref_: u32,
    pub offset: u16,
    pub domid: u16,
}
pub type xengnttab_grant_copy_segment_t = xengnttab_grant_copy_segment;
pub type xengntshr_handle = xengntdev_handle;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xs_permissions {
    pub id: xen_bindings_x86_64_types::c_uint,
    pub perms: xen_bindings_x86_64_types::c_uint,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xs_handle {
    _unused: [u8; 0],
}
pub type xs_transaction_t = u32;
pub type __builtin_va_list = [__va_list_tag; 1usize];
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __va_list_tag {
    pub gp_offset: xen_bindings_x86_64_types::c_uint,
    pub fp_offset: xen_bindings_x86_64_types::c_uint,
    pub overflow_arg_area: *mut xen_bindings_x86_64_types::c_void,
    pub reg_save_area: *mut xen_bindings_x86_64_types::c_void,
}
